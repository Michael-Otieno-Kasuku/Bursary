# Generated by Django 5.0.2 on 2024-04-03 10:33

import django.core.validators
import django.db.models.deletion
import mashinani.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('bank_id', models.AutoField(primary_key=True, serialize=False)),
                ('bank_name', models.CharField(help_text='Enter a valid Bank Name', max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_id', models.AutoField(primary_key=True, serialize=False)),
                ('country_name', models.CharField(help_text='Enter a valid Country name', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('county_id', models.AutoField(primary_key=True, serialize=False)),
                ('county_name', models.CharField(help_text='Enter the county name', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FinancialYear',
            fields=[
                ('financial_year_id', models.AutoField(primary_key=True, serialize=False)),
                ('financial_year', models.CharField(help_text='Enter a valid Financial Year (e.g., 2021/2022)', max_length=9, unique=True, validators=[mashinani.models.validate_financial_year])),
                ('financial_year_status', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed')], help_text='Enter a valid financial year status', max_length=6, validators=[mashinani.models.validate_financial_year_status])),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('institution_id', models.AutoField(primary_key=True, serialize=False)),
                ('institution_name', models.CharField(help_text='Enter a valid Institution Name', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('token', models.CharField(max_length=32)),
                ('expiry_timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('national_id_no', models.CharField(help_text='Enter a valid National ID Number', max_length=200, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_national_id_number', message='National ID number must be 8 digits long!', regex='^\\d{8}$')])),
                ('email_address', models.EmailField(help_text='Enter a valid email address', max_length=200, unique=True)),
                ('password_hash', models.CharField(help_text='Enter a valid password', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Constituency',
            fields=[
                ('constituency_id', models.AutoField(primary_key=True, serialize=False)),
                ('constituency_name', models.CharField(help_text='Enter the constituency name', max_length=255, unique=True)),
                ('county_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mashinani.county')),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('account_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_number', models.CharField(help_text='Enter a valid Institution Account Number', max_length=200, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_account_number', message='Account number must be 14 digits long!', regex='^\\d{14}$')])),
                ('bank_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mashinani.bank')),
                ('institution_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mashinani.institution')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('region_id', models.AutoField(primary_key=True, serialize=False)),
                ('region_name', models.CharField(help_text='Enter the Region name', max_length=255, unique=True)),
                ('country_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mashinani.country')),
            ],
        ),
        migrations.AddField(
            model_name='county',
            name='region_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mashinani.region'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.AutoField(primary_key=True, serialize=False)),
                ('national_id_no', models.CharField(help_text='Enter a valid National ID Number', max_length=200, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_national_id_number', message='National ID number must be 8 digits long!', regex='^\\d{8}$')])),
                ('registration_number', models.CharField(help_text='Enter a valid Student Registration Number', max_length=200, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_registration_number', message='Registration number must be in the format "COM/B/01-00162/2021".', regex='^(COM|SIT|SIK|ETS|DIT|EDS|EDA)/[A-Z]/\\d{2}-\\d{5}/\\d{4}$')])),
                ('first_name', models.CharField(help_text='Enter the first name', max_length=255)),
                ('last_name', models.CharField(help_text='Enter the last name', max_length=255)),
                ('institution_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mashinani.institution')),
            ],
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('ward_id', models.AutoField(primary_key=True, serialize=False)),
                ('ward_name', models.CharField(help_text='Enter the ward name', max_length=200, unique=True)),
                ('constituency_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mashinani.constituency')),
            ],
        ),
        migrations.CreateModel(
            name='Resident',
            fields=[
                ('resident_id', models.AutoField(primary_key=True, serialize=False)),
                ('national_id_no', models.CharField(help_text='Enter a valid National ID Number', max_length=200, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_national_id_number', message='National ID number must be 8 digits long!', regex='^\\d{8}$')])),
                ('ward_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mashinani.ward')),
            ],
        ),
        migrations.CreateModel(
            name='BursaryApplication',
            fields=[
                ('bursary_application_id', models.AutoField(primary_key=True, serialize=False)),
                ('national_id_no', models.CharField(help_text='Enter a valid National ID Number', max_length=200, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_national_id_number', message='National ID number must be 8 digits long!', regex='^\\d{8}$')])),
                ('registration_number', models.CharField(help_text='Enter a valid Student Registration Number', max_length=200, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_registration_number', message='Registration number must be in the format "COM/B/01-00162/2021"!', regex='^(COM|SIT|SIK|ETS|DIT|EDS|EDA)/[A-Z]/\\d{2}-\\d{5}/\\d{4}$')])),
                ('account_number', models.CharField(help_text='Enter a valid Institution Account Number', max_length=200, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_account_number', message='Account number must be 14 digits long!', regex='^\\d{14}$')])),
                ('serial_number', models.CharField(help_text='Auto-generated serial number', max_length=200, unique=True, validators=[mashinani.models.validate_serial_number])),
                ('date_submitted', models.DateTimeField(auto_now_add=True, help_text='Date of submission')),
                ('amount_disbursed', models.DecimalField(blank=True, decimal_places=2, help_text='Amount disbursed in Ksh', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12000)])),
                ('date_disbursed', models.DateTimeField(blank=True, help_text='Date of disbursement', null=True)),
                ('financial_year_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mashinani.financialyear')),
                ('institution_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mashinani.institution')),
                ('ward_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mashinani.ward')),
            ],
        ),
    ]
